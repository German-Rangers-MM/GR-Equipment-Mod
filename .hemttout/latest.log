2025-01-08T03:43:37.509930Z TRACE ThreadId(01) version: 1.14.1
2025-01-08T03:43:37.509961Z TRACE ThreadId(01) platform: windows
2025-01-08T03:43:37.509968Z TRACE ThreadId(01) args: [
    "C:\\Users\\kazak\\AppData\\Local\\Microsoft\\WinGet\\Packages\\BrettMayson.HEMTT_Microsoft.Winget.Source_8wekyb3d8bbwe\\hemtt.exe",
    "check",
]
2025-01-08T03:43:37.511757Z TRACE ThreadId(01) using temporary folder: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod"
2025-01-08T03:43:37.511769Z TRACE ThreadId(01) using project folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod"
2025-01-08T03:43:37.511787Z TRACE ThreadId(01) using out folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\.hemttout"
2025-01-08T03:43:37.511831Z TRACE ThreadId(01) using build folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\.hemttout\\check"
2025-01-08T03:43:37.514227Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.514278Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/weapons/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.514950Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/vz99/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.515045Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/weapons/vz99/$PREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.516169Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/rifles/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.516410Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/csw/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.516563Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/munitions/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.516777Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/ressources/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.516913Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/ressources/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.517037Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/main/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.517270Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/main/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.517496Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.517560Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/equipment/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.518110Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/helmets/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.525007Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/vests/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.525298Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/faction/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.525667Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/faction/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.527725Z TRACE ThreadId(01) checking for version macro in VfsPath { path: "/addons/main/script_version.hpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:43:37.530778Z  INFO ThreadId(01) Config loaded for GR-EQUIPMENT-MOD 1.0.0.0-bba874e3
2025-01-08T03:43:37.530802Z TRACE ThreadId(01) Scanning E:\GitHubRepositories\GR MM\GR-Equipment-Mod\addons for addons
2025-01-08T03:43:37.531069Z  INFO ThreadId(01) Running checks
2025-01-08T03:43:37.531084Z TRACE ThreadId(01) phase: init (BOM Check) (start)
2025-01-08T03:43:37.531090Z TRACE ThreadId(01) phase: init (BOM Check) (done)
2025-01-08T03:43:37.531091Z TRACE ThreadId(01) phase: init (Hooks) (start)
2025-01-08T03:43:37.532952Z TRACE ThreadId(01) phase: init (Hooks) (done)
2025-01-08T03:43:37.532957Z TRACE ThreadId(01) phase: init (Stringtables) (start)
2025-01-08T03:43:37.532959Z TRACE ThreadId(01) phase: init (Stringtables) (done)
2025-01-08T03:43:37.532962Z TRACE ThreadId(01) phase: init (SQF) (start)
2025-01-08T03:43:37.718927Z TRACE ThreadId(01) phase: init (SQF) (done)
2025-01-08T03:43:37.718939Z TRACE ThreadId(01) phase: init (Rapifier) (start)
2025-01-08T03:43:37.718941Z TRACE ThreadId(01) phase: init (Rapifier) (done)
2025-01-08T03:43:37.718942Z TRACE ThreadId(01) phase: init (Binarize) (start)
2025-01-08T03:43:37.718948Z TRACE ThreadId(01) Using Binarize path from registry
2025-01-08T03:43:37.719273Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\y\\GerRng_\\addons\\equipment" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\addons\\equipment"
2025-01-08T03:43:37.726725Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\y\\GerRng_\\addons\\faction" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\addons\\faction"
2025-01-08T03:43:37.733945Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\y\\GerRng_\\addons\\main" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\addons\\main"
2025-01-08T03:43:37.740913Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\y\\GerRng_\\addons\\ressouces" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\addons\\ressources"
2025-01-08T03:43:37.747960Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\y\\GerRng_\\addons\\weapons" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\addons\\weapons"
2025-01-08T03:43:37.754889Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\A3\\Functions_F_Exp_A" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include\\A3\\Functions_F_Exp_A"
2025-01-08T03:43:37.761603Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\A3\\ui_f" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include\\A3\\ui_f"
2025-01-08T03:43:37.768142Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\A3\\ui_f_exp_a" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include\\A3\\ui_f_exp_a"
2025-01-08T03:43:37.774829Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\x\\cba" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include\\x\\cba"
2025-01-08T03:43:37.781677Z TRACE ThreadId(01) junction link "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\z\\ace" => "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include\\z\\ace"
2025-01-08T03:43:37.788246Z TRACE ThreadId(01) phase: init (Binarize) (done)
2025-01-08T03:43:37.788256Z TRACE ThreadId(01) phase: check (BOM Check) (start)
2025-01-08T03:43:37.795523Z TRACE ThreadId(01) phase: check (BOM Check) (done)
2025-01-08T03:43:37.795533Z TRACE ThreadId(01) phase: check (Hooks) (start)
2025-01-08T03:43:37.795535Z TRACE ThreadId(01) phase: check (Hooks) (done)
2025-01-08T03:43:37.795536Z TRACE ThreadId(01) phase: check (Stringtables) (start)
2025-01-08T03:43:37.795558Z TRACE ThreadId(01) phase: check (Stringtables) (done)
2025-01-08T03:43:37.795560Z TRACE ThreadId(01) phase: check (SQF) (start)
2025-01-08T03:43:37.795605Z TRACE ThreadId(01) phase: check (SQF) (done)
2025-01-08T03:43:37.795607Z TRACE ThreadId(01) phase: check (Rapifier) (start)
2025-01-08T03:43:37.795632Z TRACE ThreadId(01) phase: check (Rapifier) (done)
2025-01-08T03:43:37.795633Z TRACE ThreadId(01) phase: check (Binarize) (start)
2025-01-08T03:43:37.818888Z TRACE ThreadId(01) checking textures & materials for /addons/weapons/vz99/data/vz99_vehicle.p3d
2025-01-08T03:43:37.820929Z TRACE ThreadId(01) checking textures & materials for /addons/weapons/vz99/data/vz99_carry.p3d
2025-01-08T03:43:37.823143Z  INFO ThreadId(01) Validated 2 files for binarization
2025-01-08T03:43:37.823151Z TRACE ThreadId(01) phase: check (Binarize) (done)
2025-01-08T03:43:37.823154Z TRACE ThreadId(01) phase: pre_build (BOM Check) (start)
2025-01-08T03:43:37.823156Z TRACE ThreadId(01) phase: pre_build (BOM Check) (done)
2025-01-08T03:43:37.823158Z TRACE ThreadId(01) phase: pre_build (Hooks) (start)
2025-01-08T03:43:37.823183Z TRACE ThreadId(01) no pre_build hooks
2025-01-08T03:43:37.823185Z TRACE ThreadId(01) phase: pre_build (Hooks) (done)
2025-01-08T03:43:37.823186Z TRACE ThreadId(01) phase: pre_build (Stringtables) (start)
2025-01-08T03:43:37.836225Z TRACE ThreadId(01) phase: pre_build (Stringtables) (done)
2025-01-08T03:43:37.836234Z TRACE ThreadId(01) phase: pre_build (SQF) (start)
2025-01-08T03:43:37.872836Z TRACE ThreadId(08) sqf compiling /addons/equipment/helmets/functions/fnc_selectHelmet.sqf
2025-01-08T03:43:37.872849Z TRACE ThreadId(03) sqf compiling /addons/weapons/vz99/functions/fnc_canPickupWeapon.sqf
2025-01-08T03:43:37.872858Z TRACE ThreadId(16) sqf compiling /addons/weapons/vz99/functions/fnc_levelToGround.sqf
2025-01-08T03:43:37.872839Z TRACE ThreadId(18) sqf compiling /addons/equipment/helmets/XEH_init.sqf
2025-01-08T03:43:37.872851Z TRACE ThreadId(04) sqf compiling /addons/equipment/helmets/XEH_postInit.sqf
2025-01-08T03:43:37.872867Z TRACE ThreadId(09) sqf compiling /addons/weapons/vz99/functions/fnc_handlePlayerVehicleChanged.sqf
2025-01-08T03:43:37.872862Z TRACE ThreadId(05) sqf compiling /addons/weapons/vz99/functions/fnc_doSelectNextMagazine.sqf
2025-01-08T03:43:37.872850Z TRACE ThreadId(13) sqf compiling /addons/weapons/vz99/functions/fnc_canSelectNextMagazine.sqf
2025-01-08T03:43:37.872857Z TRACE ThreadId(02) sqf compiling /addons/weapons/vz99/functions/fnc_handleFired.sqf
2025-01-08T03:43:37.872800Z TRACE ThreadId(15) sqf compiling /addons/equipment/helmets/XEH_preStart.sqf
2025-01-08T03:43:37.872858Z TRACE ThreadId(14) sqf compiling /addons/weapons/vz99/functions/fnc_doDeployWeapon.sqf
2025-01-08T03:43:37.872888Z TRACE ThreadId(21) sqf compiling /addons/weapons/vz99/functions/fnc_doReload.sqf
2025-01-08T03:43:37.873466Z TRACE ThreadId(06) sqf compiling /addons/weapons/vz99/XEH_postInit.sqf
2025-01-08T03:43:37.872840Z TRACE ThreadId(19) sqf compiling /addons/equipment/helmets/XEH_preInit.sqf
2025-01-08T03:43:37.872863Z TRACE ThreadId(17) sqf compiling /addons/weapons/vz99/functions/fnc_canDeployWeapon.sqf
2025-01-08T03:43:37.873527Z TRACE ThreadId(07) sqf compiling /addons/equipment/functions/fn_bobcat.sqf
2025-01-08T03:43:37.873530Z TRACE ThreadId(11) sqf compiling /addons/weapons/vz99/functions/fnc_doPickupWeapon.sqf
2025-01-08T03:43:37.873543Z TRACE ThreadId(12) sqf compiling /addons/weapons/vz99/XEH_preInit.sqf
2025-01-08T03:43:37.873572Z TRACE ThreadId(22) sqf compiling /addons/weapons/vz99/XEH_preStart.sqf
2025-01-08T03:43:37.922437Z  INFO ThreadId(01) Compiled 19 sqf files
2025-01-08T03:43:37.922499Z TRACE ThreadId(01) phase: pre_build (SQF) (done)
2025-01-08T03:43:37.922502Z TRACE ThreadId(01) phase: pre_build (Rapifier) (start)
2025-01-08T03:43:38.127428Z ERROR ThreadId(01) Failed to execute command:
Preprocessor error: Workspace Error: VfsError: Could not read path for '/addons/weapons/vz99/data/plastic.rvmat': IO error: stream did not contain valid UTF-8
