2025-01-08T03:10:23.777983Z TRACE ThreadId(01) version: 1.14.1
2025-01-08T03:10:23.778017Z TRACE ThreadId(01) platform: windows
2025-01-08T03:10:23.778024Z TRACE ThreadId(01) args: [
    "C:\\Users\\kazak\\AppData\\Local\\Microsoft\\WinGet\\Packages\\BrettMayson.HEMTT_Microsoft.Winget.Source_8wekyb3d8bbwe\\hemtt.exe",
    "launch",
]
2025-01-08T03:10:23.778495Z TRACE ThreadId(01) launch config: LaunchOptions { workshop: ["1779063631", "2369477168", "450814997", "463939057"], dlc: [], presets: [], optionals: [], mission: None, parameters: ["-noPause", "-noPauseAudio", "-window"], executable: None, binarize: None, file_patching: None, instances: None, rapify: None }
2025-01-08T03:10:23.778916Z DEBUG ThreadId(01) Arma 3 found at: D:\SteamLibrary\steamapps\common\Arma 3
2025-01-08T03:10:23.780419Z TRACE ThreadId(01) using temporary folder: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod"
2025-01-08T03:10:23.780429Z TRACE ThreadId(01) using project folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod"
2025-01-08T03:10:23.780446Z TRACE ThreadId(01) using out folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\.hemttout"
2025-01-08T03:10:23.780487Z TRACE ThreadId(01) using build folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\.hemttout\\dev"
2025-01-08T03:10:23.782853Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/ressources/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.783020Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/ressources/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.783176Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/main/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.783208Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/main/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.783436Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.783584Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/weapons/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.783927Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/csw/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.784023Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/munitions/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.784320Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/vz99/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.784473Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/weapons/vz99/$PREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.785782Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/rifles/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.785963Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.786025Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/equipment/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.786278Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/vests/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.786819Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/helmets/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.793689Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/faction/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.793818Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/faction/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.796213Z TRACE ThreadId(01) checking for version macro in VfsPath { path: "/addons/main/script_version.hpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T03:10:23.799274Z  INFO ThreadId(01) Config loaded for Example Mod 1.0.0.0-ef1d8368
2025-01-08T03:10:23.799300Z TRACE ThreadId(01) Scanning E:\GitHubRepositories\GR MM\GR-Equipment-Mod\addons for addons
2025-01-08T03:10:23.799609Z  INFO ThreadId(01) Creating `dev` version
2025-01-08T03:10:23.799616Z TRACE ThreadId(01) phase: init (BOM Check) (start)
2025-01-08T03:10:23.799620Z TRACE ThreadId(01) phase: init (BOM Check) (done)
2025-01-08T03:10:23.799622Z TRACE ThreadId(01) phase: init (Hooks) (start)
2025-01-08T03:10:23.801541Z TRACE ThreadId(01) phase: init (Hooks) (done)
2025-01-08T03:10:23.801547Z TRACE ThreadId(01) phase: init (Stringtables) (start)
2025-01-08T03:10:23.801549Z TRACE ThreadId(01) phase: init (Stringtables) (done)
2025-01-08T03:10:23.801552Z TRACE ThreadId(01) phase: init (SQF) (start)
2025-01-08T03:10:23.993232Z TRACE ThreadId(01) phase: init (SQF) (done)
2025-01-08T03:10:23.993243Z TRACE ThreadId(01) phase: init (Rapifier) (start)
2025-01-08T03:10:23.993247Z TRACE ThreadId(01) phase: init (Rapifier) (done)
2025-01-08T03:10:23.993249Z TRACE ThreadId(01) phase: init (Files) (start)
2025-01-08T03:10:23.993250Z TRACE ThreadId(01) phase: init (Files) (done)
2025-01-08T03:10:23.993252Z TRACE ThreadId(01) phase: init (FilePatching) (start)
2025-01-08T03:10:23.993253Z TRACE ThreadId(01) phase: init (FilePatching) (done)
2025-01-08T03:10:23.993255Z TRACE ThreadId(01) phase: check (BOM Check) (start)
2025-01-08T03:10:23.994942Z TRACE ThreadId(01) phase: check (BOM Check) (done)
2025-01-08T03:10:23.994948Z TRACE ThreadId(01) phase: check (Hooks) (start)
2025-01-08T03:10:23.994950Z TRACE ThreadId(01) phase: check (Hooks) (done)
2025-01-08T03:10:23.994952Z TRACE ThreadId(01) phase: check (Stringtables) (start)
2025-01-08T03:10:23.994971Z TRACE ThreadId(01) phase: check (Stringtables) (done)
2025-01-08T03:10:23.994973Z TRACE ThreadId(01) phase: check (SQF) (start)
2025-01-08T03:10:23.995016Z TRACE ThreadId(01) phase: check (SQF) (done)
2025-01-08T03:10:23.995018Z TRACE ThreadId(01) phase: check (Rapifier) (start)
2025-01-08T03:10:23.995042Z TRACE ThreadId(01) phase: check (Rapifier) (done)
2025-01-08T03:10:23.995044Z TRACE ThreadId(01) phase: check (Files) (start)
2025-01-08T03:10:23.995045Z TRACE ThreadId(01) phase: check (Files) (done)
2025-01-08T03:10:23.995046Z TRACE ThreadId(01) phase: check (FilePatching) (start)
2025-01-08T03:10:23.995048Z TRACE ThreadId(01) phase: check (FilePatching) (done)
2025-01-08T03:10:23.995050Z TRACE ThreadId(01) phase: pre_build (BOM Check) (start)
2025-01-08T03:10:23.995052Z TRACE ThreadId(01) phase: pre_build (BOM Check) (done)
2025-01-08T03:10:23.995053Z TRACE ThreadId(01) phase: pre_build (Hooks) (start)
2025-01-08T03:10:23.995093Z TRACE ThreadId(01) no pre_build hooks
2025-01-08T03:10:23.995095Z TRACE ThreadId(01) phase: pre_build (Hooks) (done)
2025-01-08T03:10:23.995096Z TRACE ThreadId(01) phase: pre_build (Stringtables) (start)
2025-01-08T03:10:24.008804Z TRACE ThreadId(01) phase: pre_build (Stringtables) (done)
2025-01-08T03:10:24.008812Z TRACE ThreadId(01) phase: pre_build (SQF) (start)
2025-01-08T03:10:24.044847Z TRACE ThreadId(02) sqf compiling /addons/weapons/vz99/functions/fnc_canSelectNextMagazine.sqf
2025-01-08T03:10:24.044862Z TRACE ThreadId(07) sqf compiling /addons/equipment/helmets/XEH_postInit.sqf
2025-01-08T03:10:24.044858Z TRACE ThreadId(05) sqf compiling /addons/weapons/vz99/XEH_preStart.sqf
2025-01-08T03:10:24.044847Z TRACE ThreadId(03) sqf compiling /addons/equipment/helmets/XEH_preStart.sqf
2025-01-08T03:10:24.044847Z TRACE ThreadId(11) sqf compiling /addons/equipment/functions/fn_bobcat.sqf
2025-01-08T03:10:24.044858Z TRACE ThreadId(04) sqf compiling /addons/weapons/vz99/functions/fnc_handlePlayerVehicleChanged.sqf
2025-01-08T03:10:24.044859Z TRACE ThreadId(06) sqf compiling /addons/weapons/vz99/functions/fnc_doSelectNextMagazine.sqf
2025-01-08T03:10:24.044865Z TRACE ThreadId(09) sqf compiling /addons/weapons/vz99/functions/fnc_canPickupWeapon.sqf
2025-01-08T03:10:24.044853Z TRACE ThreadId(25) sqf compiling /addons/weapons/vz99/functions/fnc_doReload.sqf
2025-01-08T03:10:24.045028Z TRACE ThreadId(08) sqf compiling /addons/equipment/helmets/functions/fnc_selectHelmet.sqf
2025-01-08T03:10:24.044867Z TRACE ThreadId(10) sqf compiling /addons/weapons/vz99/functions/fnc_canDeployWeapon.sqf
2025-01-08T03:10:24.045578Z TRACE ThreadId(13) sqf compiling /addons/weapons/vz99/XEH_preInit.sqf
2025-01-08T03:10:24.045674Z TRACE ThreadId(14) sqf compiling /addons/equipment/helmets/XEH_preInit.sqf
2025-01-08T03:10:24.046219Z TRACE ThreadId(15) sqf compiling /addons/weapons/vz99/functions/fnc_handleFired.sqf
2025-01-08T03:10:24.046264Z TRACE ThreadId(16) sqf compiling /addons/weapons/vz99/functions/fnc_doDeployWeapon.sqf
2025-01-08T03:10:24.046469Z TRACE ThreadId(17) sqf compiling /addons/equipment/helmets/XEH_init.sqf
2025-01-08T03:10:24.046515Z TRACE ThreadId(18) sqf compiling /addons/weapons/vz99/XEH_postInit.sqf
2025-01-08T03:10:24.046651Z TRACE ThreadId(19) sqf compiling /addons/weapons/vz99/functions/fnc_doPickupWeapon.sqf
2025-01-08T03:10:24.046873Z TRACE ThreadId(20) sqf compiling /addons/weapons/vz99/functions/fnc_levelToGround.sqf
2025-01-08T03:10:24.093753Z  INFO ThreadId(01) Compiled 19 sqf files
2025-01-08T03:10:24.093818Z TRACE ThreadId(01) phase: pre_build (SQF) (done)
2025-01-08T03:10:24.093821Z TRACE ThreadId(01) phase: pre_build (Rapifier) (start)
2025-01-08T03:10:24.304864Z ERROR ThreadId(01) Failed to execute command:
Preprocessor error: Workspace Error: VfsError: Could not read path for '/addons/weapons/vz99/data/glass.rvmat': IO error: stream did not contain valid UTF-8
