2025-01-08T16:50:46.158887Z TRACE ThreadId(01) version: 1.14.1
2025-01-08T16:50:46.158918Z TRACE ThreadId(01) platform: windows
2025-01-08T16:50:46.158925Z TRACE ThreadId(01) args: [
    "C:\\Users\\kazak\\AppData\\Local\\Microsoft\\WinGet\\Packages\\BrettMayson.HEMTT_Microsoft.Winget.Source_8wekyb3d8bbwe\\hemtt.exe",
    "launch",
]
2025-01-08T16:50:46.159244Z TRACE ThreadId(01) launch config: LaunchOptions { workshop: ["1779063631", "2369477168", "2589302544", "450814997", "463939057", "497660133"], dlc: [], presets: [], optionals: [], mission: None, parameters: ["-noPause", "-noPauseAudio", "-window"], executable: None, binarize: None, file_patching: None, instances: None, rapify: None }
2025-01-08T16:50:46.166077Z DEBUG ThreadId(01) Arma 3 found at: D:\SteamLibrary\steamapps\common\Arma 3
2025-01-08T16:50:46.166316Z TRACE ThreadId(01) using temporary folder: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod"
2025-01-08T16:50:46.166324Z TRACE ThreadId(01) using project folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod"
2025-01-08T16:50:46.166341Z TRACE ThreadId(01) using out folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\.hemttout"
2025-01-08T16:50:46.166418Z TRACE ThreadId(01) using build folder: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\.hemttout\\dev"
2025-01-08T16:50:46.169366Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/weapons/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.169548Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.169737Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/munitions/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.170074Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/csw/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.170301Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/weapons/vz99/$PREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.170475Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/vz99/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.171879Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/weapons/rifles/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.172015Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/main/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.172134Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/main/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.172464Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/ressources/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.172593Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/ressources/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.172708Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/faction/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.173211Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/faction/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.175482Z TRACE ThreadId(01) Prefix: VfsPath { path: "/addons/equipment/$PBOPREFIX$", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.175600Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.175852Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/helmets/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.183273Z TRACE ThreadId(01) config.cpp: VfsPath { path: "/addons/equipment/vests/config.cpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.183321Z TRACE ThreadId(01) checking for version macro in VfsPath { path: "/addons/main/script_version.hpp", fs: VFS { fs: OverlayFS { layers: [VfsPath { path: "", fs: VFS { fs: In Memory File System } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod\\include" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "C:\\Users\\kazak\\AppData\\Local\\Temp\\hemtt\\GitHubRepositories_GR MM_GR-Equipment-Mod\\hemtt_binarize_output" } } } } } }, VfsPath { path: "", fs: VFS { fs: AltrootFS { root: VfsPath { path: "", fs: VFS { fs: PhysicalFS { root: "E:\\GitHubRepositories\\GR MM\\GR-Equipment-Mod" } } } } } }] } } }
2025-01-08T16:50:46.186262Z  INFO ThreadId(01) Config loaded for GR-EQUIPMENT-MOD 1.0.0.5-bb953f44
2025-01-08T16:50:46.186286Z TRACE ThreadId(01) Scanning E:\GitHubRepositories\GR MM\GR-Equipment-Mod\addons for addons
2025-01-08T16:50:46.186601Z  INFO ThreadId(01) Creating `dev` version
2025-01-08T16:50:46.186608Z TRACE ThreadId(01) phase: init (BOM Check) (start)
2025-01-08T16:50:46.186612Z TRACE ThreadId(01) phase: init (BOM Check) (done)
2025-01-08T16:50:46.186613Z TRACE ThreadId(01) phase: init (Hooks) (start)
2025-01-08T16:50:46.188542Z TRACE ThreadId(01) phase: init (Hooks) (done)
2025-01-08T16:50:46.188547Z TRACE ThreadId(01) phase: init (Stringtables) (start)
2025-01-08T16:50:46.188550Z TRACE ThreadId(01) phase: init (Stringtables) (done)
2025-01-08T16:50:46.188552Z TRACE ThreadId(01) phase: init (SQF) (start)
2025-01-08T16:50:46.411519Z TRACE ThreadId(01) phase: init (SQF) (done)
2025-01-08T16:50:46.411532Z TRACE ThreadId(01) phase: init (Rapifier) (start)
2025-01-08T16:50:46.411534Z TRACE ThreadId(01) phase: init (Rapifier) (done)
2025-01-08T16:50:46.411536Z TRACE ThreadId(01) phase: init (Files) (start)
2025-01-08T16:50:46.411537Z TRACE ThreadId(01) phase: init (Files) (done)
2025-01-08T16:50:46.411538Z TRACE ThreadId(01) phase: init (FilePatching) (start)
2025-01-08T16:50:46.411540Z TRACE ThreadId(01) phase: init (FilePatching) (done)
2025-01-08T16:50:46.411542Z TRACE ThreadId(01) phase: check (BOM Check) (start)
2025-01-08T16:50:46.413101Z TRACE ThreadId(01) phase: check (BOM Check) (done)
2025-01-08T16:50:46.413106Z TRACE ThreadId(01) phase: check (Hooks) (start)
2025-01-08T16:50:46.413107Z TRACE ThreadId(01) phase: check (Hooks) (done)
2025-01-08T16:50:46.413109Z TRACE ThreadId(01) phase: check (Stringtables) (start)
2025-01-08T16:50:46.413128Z TRACE ThreadId(01) phase: check (Stringtables) (done)
2025-01-08T16:50:46.413130Z TRACE ThreadId(01) phase: check (SQF) (start)
2025-01-08T16:50:46.413173Z TRACE ThreadId(01) phase: check (SQF) (done)
2025-01-08T16:50:46.413175Z TRACE ThreadId(01) phase: check (Rapifier) (start)
2025-01-08T16:50:46.413199Z TRACE ThreadId(01) phase: check (Rapifier) (done)
2025-01-08T16:50:46.413201Z TRACE ThreadId(01) phase: check (Files) (start)
2025-01-08T16:50:46.413202Z TRACE ThreadId(01) phase: check (Files) (done)
2025-01-08T16:50:46.413203Z TRACE ThreadId(01) phase: check (FilePatching) (start)
2025-01-08T16:50:46.413205Z TRACE ThreadId(01) phase: check (FilePatching) (done)
2025-01-08T16:50:46.413206Z TRACE ThreadId(01) phase: pre_build (BOM Check) (start)
2025-01-08T16:50:46.413209Z TRACE ThreadId(01) phase: pre_build (BOM Check) (done)
2025-01-08T16:50:46.413210Z TRACE ThreadId(01) phase: pre_build (Hooks) (start)
2025-01-08T16:50:46.413249Z TRACE ThreadId(01) no pre_build hooks
2025-01-08T16:50:46.413250Z TRACE ThreadId(01) phase: pre_build (Hooks) (done)
2025-01-08T16:50:46.413252Z TRACE ThreadId(01) phase: pre_build (Stringtables) (start)
2025-01-08T16:50:46.427103Z TRACE ThreadId(01) phase: pre_build (Stringtables) (done)
2025-01-08T16:50:46.427113Z TRACE ThreadId(01) phase: pre_build (SQF) (start)
2025-01-08T16:50:46.463893Z TRACE ThreadId(23) sqf compiling /addons/equipment/helmets/XEH_postInit.sqf
2025-01-08T16:50:46.463906Z TRACE ThreadId(13) sqf compiling /addons/equipment/helmets/XEH_init.sqf
2025-01-08T16:50:46.463893Z TRACE ThreadId(14) sqf compiling /addons/equipment/helmets/XEH_preStart.sqf
2025-01-08T16:50:46.463931Z TRACE ThreadId(05) sqf compiling /addons/weapons/vz99/functions/fnc_handlePlayerVehicleChanged.sqf
2025-01-08T16:50:46.463893Z TRACE ThreadId(06) sqf compiling /addons/weapons/vz99/functions/fnc_doDeployWeapon.sqf
2025-01-08T16:50:46.463903Z TRACE ThreadId(09) sqf compiling /addons/equipment/helmets/functions/fnc_selectHelmet.sqf
2025-01-08T16:50:46.463893Z TRACE ThreadId(02) sqf compiling /addons/equipment/functions/fn_bobcat.sqf
2025-01-08T16:50:46.463902Z TRACE ThreadId(16) sqf compiling /addons/weapons/vz99/XEH_preInit.sqf
2025-01-08T16:50:46.463905Z TRACE ThreadId(10) sqf compiling /addons/weapons/vz99/XEH_preStart.sqf
2025-01-08T16:50:46.463906Z TRACE ThreadId(11) sqf compiling /addons/weapons/vz99/functions/fnc_canDeployWeapon.sqf
2025-01-08T16:50:46.463893Z TRACE ThreadId(03) sqf compiling /addons/equipment/helmets/XEH_preInit.sqf
2025-01-08T16:50:46.464056Z TRACE ThreadId(15) sqf compiling /addons/weapons/vz99/functions/fnc_doReload.sqf
2025-01-08T16:50:46.463959Z TRACE ThreadId(04) sqf compiling /addons/weapons/vz99/functions/fnc_handleFired.sqf
2025-01-08T16:50:46.463925Z TRACE ThreadId(08) sqf compiling /addons/weapons/vz99/XEH_postInit.sqf
2025-01-08T16:50:46.464113Z TRACE ThreadId(12) sqf compiling /addons/weapons/vz99/functions/fnc_levelToGround.sqf
2025-01-08T16:50:46.465455Z TRACE ThreadId(17) sqf compiling /addons/weapons/vz99/functions/fnc_doPickupWeapon.sqf
2025-01-08T16:50:46.465490Z TRACE ThreadId(18) sqf compiling /addons/weapons/vz99/functions/fnc_canSelectNextMagazine.sqf
2025-01-08T16:50:46.465558Z TRACE ThreadId(19) sqf compiling /addons/weapons/vz99/functions/fnc_doSelectNextMagazine.sqf
2025-01-08T16:50:46.465591Z TRACE ThreadId(20) sqf compiling /addons/weapons/vz99/functions/fnc_canPickupWeapon.sqf
2025-01-08T16:50:46.512790Z  INFO ThreadId(01) Compiled 19 sqf files
2025-01-08T16:50:46.512856Z TRACE ThreadId(01) phase: pre_build (SQF) (done)
2025-01-08T16:50:46.512859Z TRACE ThreadId(01) phase: pre_build (Rapifier) (start)
2025-01-08T16:50:46.723320Z  INFO ThreadId(01) Rapified 14 addon configs
2025-01-08T16:50:46.723409Z TRACE ThreadId(01) phase: pre_build (Rapifier) (failed)
2025-01-08T16:50:46.949233Z TRACE ThreadId(01) writing ci annotations to .hemttout/ci_annotations.txt
2025-01-08T16:50:47.104242Z TRACE ThreadId(01) wrote 8008 ci annotations to .hemttout/ci_annotations.txt
